<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.aksw.jenax</groupId>
		<artifactId>jenax-bom</artifactId>
		<version>4.7.0-1-SNAPSHOT</version>
		<relativePath>jenax-bom</relativePath>
	</parent>

	<!-- <groupId>org.aksw.jenax</groupId> -->
	<artifactId>jenax-parent</artifactId>

	<packaging>pom</packaging>
	<name>Jena eXtension Components</name>
	<description>Modular extensions for Apache Jena</description>
	<url>https://github.com/Scaseco/jenax</url>

	<modules>
		<module>jenax-resources-parent</module>
		<module>jenax-annotations-parent</module>
		<module>jenax-jgrapht-parent</module>
		<module>jenax-arq-parent</module>
		<module>jenax-rx-parent</module>
		<module>jenax-analytics-parent</module>
		<module>jenax-functionbinder-parent</module>
		<module>jenax-reprogen-parent</module>
		<module>jenax-fsrdfstore-parent</module>
		<module>jenax-io-parent</module>
		<module>jenax-models-parent</module>
		<module>jenax-facete-parent</module>
		<module>jenax-conjure-parent</module>
		<module>jenax-server-parent</module>

		<!-- <module>jenax-cli-core</module> -->
	</modules>

	<issueManagement>
		<url>https://github.com/Scaseco/jenax/issues</url>
		<system>GitHub</system>
	</issueManagement>

	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/Scaseco/jenax</url>
		<connection>scm:git:git://github.com/Scaseco/jenax.git</connection>
		<developerConnection>scm:git:git@github.com:Scaseco/jenax.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<developers>
		<developer>
			<name>Claus Stadler</name>
			<url>http://aksw.org/ClausStadler</url>
			<organization>AKSW</organization>
			<organizationUrl>http://aksw.org</organizationUrl>
		</developer>
	</developers>

	<properties>
		<!-- This property is used in :jenax-facete-impl for a plugin -->
		<javax.xml.version>2.3.1</javax.xml.version>

		<!-- Project Settings -->
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<!-- <java.version.javadoc>http://java.sun.com/javase/9/docs/api/</java.version.javadoc> -->
		<file.encoding>UTF-8</file.encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

	</properties>


	<build>
		<plugins>
			<!-- That's a sledge hammer solution - but at least it works ... -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<arguments>-P!source-artifacts</arguments>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>-Dmaven.test.skip=false deploy</goals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
				<version>1.9.0</version>
				<configuration>
					<gitFlowConfig>
						<versionTagPrefix>v</versionTagPrefix>
					</gitFlowConfig>
				</configuration>
			</plugin>

			<!--Maven Compiler Plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<!-- <source>${maven.compiler.source}</source> <target>${maven.compiler.target}</target> -->
					<release>11</release>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>


			<!-- Solution from http://stackoverflow.com/questions/4725668/how-to-deploy-snapshot-with-sources-and-javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M1</version>
				<!-- <configuration> <skipTests>false</skipTests> </configuration> -->
			</plugin>

			<!-- <plugin> -->
			<!-- <groupId>org.mortbay.jetty</groupId> -->
			<!-- <artifactId>jetty-maven-plugin</artifactId> -->
			<!-- <version>${jetty-plugin.version}</version> -->
			<!-- <configuration> -->
			<!-- <systemProperties> -->
			<!-- <systemProperty> -->
			<!-- <name>jetty.port</name> -->
			<!-- <value>5522</value> -->
			<!-- </systemProperty> -->
			<!-- </systemProperties> -->
			<!-- <reload>manual</reload> -->
			<!-- </configuration> -->
			<!-- </plugin> -->

			<!-- It may be useful to be able to create fat jars on demand during development,
				but with the shade plugin as is, it would upload them as part of every deployment/release
				- therefore its disabled as of now -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-shade-plugin</artifactId>
				<version>2.4.3</version> <executions> <execution> <phase>package</phase>
				<goals> <goal>shade</goal> </goals> <configuration> <createDependencyReducedPom>false</createDependencyReducedPom>
				<shadedArtifactAttached>true</shadedArtifactAttached> <shadedClassifierName>jar-with-dependencies</shadedClassifierName>
				<attach>false</attach> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef>
				</descriptorRefs> <filters> <filter> <artifact>*:*</artifact> <excludes>
				<exclude>META-INF/*.SF</exclude> <exclude>META-INF/*.DSA</exclude> <exclude>META-INF/*.RSA</exclude>
				</excludes> </filter> </filters> <transformers> <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"
				/> </transformers> </configuration> </execution> </executions> </plugin> -->
			<plugin>
				<groupId>org.jboss.tattletale</groupId>
				<artifactId>tattletale-maven</artifactId>
				<version>1.1.2.Final</version>
				<executions>
					<execution>
						<phase>verify</phase> <!-- needs to run after WAR package has been built -->
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<source>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</source>
					<destination>${project.reporting.outputDirectory}/tattletale</destination>
					<reports>
						<report>jar</report>
						<report>multiplejars</report>
					</reports>
					<profiles>
						<profile>java6</profile>
					</profiles>
					<failOnWarn>true</failOnWarn>
					<!-- excluding some jars, if jar name contains any of these strings
						it won't be analyzed -->
					<excludes>
						<!-- <exclude>commons-beanutils-core-</exclude> -->
						<!-- <exclude>postgresql-</exclude> -->
					</excludes>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>

				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-remote-resources-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>bundle</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.bsc.maven</groupId>
					<artifactId>maven-processor-plugin</artifactId>
					<version>2.0.5</version>
					<executions>
						<execution>
							<id>process</id>
							<goals>
								<goal>process</goal>
							</goals>
							<phase>generate-sources</phase>
							<configuration>
								<processors>
									<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
								</processors>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-jpamodelgen</artifactId>
							<version>5.3.6.Final</version>
						</dependency>

						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>${javax.xml.version}</version>
						</dependency>
						<dependency>

							<groupId>javax.annotation</groupId>
							<artifactId>javax.annotation-api</artifactId>
							<version>1.3.1</version>
						</dependency>


					</dependencies>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.aksw.jenax</groupId>
				<artifactId>jenax-bom</artifactId>
				<version>${project.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.3.1</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<failOnError>false</failOnError>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>dependencyconflicts</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>1.4.1</version>
						<executions>
							<execution>
								<id>enforce</id>
								<configuration>
									<rules>
										<dependencyConvergence />
									</rules>
								</configuration>
								<goals>
									<goal>enforce</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>
