@prefix q: <http://example.org/query/> .
@prefix t: <http://example.org/test/> .
@prefix lsq: <http://lsq.aksw.org/vocab#> .
@prefix qc: <http://sparql-qc-bench.inrialpes.fr/testsuite#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .


q:q1a
  lsq:text "SELECT * { ?s ?p ?o }" ;
  .

t:t1a
  a qc:ContainmentTest ;
  qc:sourceQuery q:q1a ;
  qc:targetQuery q:q1a ;
  qc:result "{?p=?p, ?o=?o, ?s=?s }" ;
  .

q:q2a
  lsq:text "SELECT * { { SELECT ?s { ?s a <http://foo> } } }"
  .

q:q2b
  lsq:text "SELECT * { { SELECT ?s { ?s a <http://foo> } } FILTER(?s = <http://bar>) }"
  .

t:t2a
  a qc:ContainmentTest ;
  qc:sourceQuery q:q2a ;
  qc:targetQuery q:q2b ;
  qc:result "{?v_2=?v_2, ?s=?s, ?v_1=?v_1}" ;
  .


q:l1a
  lsq:text
"""
Select Distinct ?x1 {
    ?x1 <http://dbpedia.org/ontology/activeYearsStartYear> ?x2.
    ?x1 <http://dbpedia.org/ontology/associatedBand> ?x3.
    ?x1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?x4.
    ?x1 <http://dbpedia.org/ontology/background> "non_vocal_instrumentalist".
    ?x1 <http://dbpedia.org/ontology/birthDate> ?x5.
    ?x1 <http://dbpedia.org/ontology/birthPlace> ?x6.
    ?x1 <http://dbpedia.org/ontology/birthYear> ?x7.
    ?x1 <http://dbpedia.org/ontology/genre> ?x8.
    ?x1 <http://dbpedia.org/ontology/instrument> ?x9.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
}
""" .



q:l1b
  lsq:text
"""
Select Distinct ?x1 {
    ?x1 <http://dbpedia.org/ontology/activeYearsStartYear> ?x2.
    ?x1 <http://dbpedia.org/ontology/associatedBand> ?x3.
    ?x1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?x4.
    ?x1 <http://dbpedia.org/ontology/background> "non_vocal_instrumentalist".
    ?x1 <http://dbpedia.org/ontology/birthDate> ?x5.
    ?x1 <http://dbpedia.org/ontology/birthPlace> ?x6.
    ?x1 <http://dbpedia.org/ontology/birthYear> ?x7.
    ?x1 <http://dbpedia.org/ontology/genre> ?x8.
    ?x1 <http://dbpedia.org/ontology/instrument> ?x9.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
}
""" .


q:l1c
  lsq:text
"""
Select ?x1 {
    ?x1 <http://dbpedia.org/ontology/activeYearsStartYear> ?x2.
    ?x1 <http://dbpedia.org/ontology/associatedBand> ?x3.
    ?x1 <http://dbpedia.org/ontology/associatedMusicalArtist> ?x4.
    ?x1 <http://dbpedia.org/ontology/background> "non_vocal_instrumentalist".
    ?x1 <http://dbpedia.org/ontology/birthDate> ?x5.
    ?x1 <http://dbpedia.org/ontology/birthPlace> ?x6.
    ?x1 <http://dbpedia.org/ontology/birthYear> ?x7.
    ?x1 <http://dbpedia.org/ontology/genre> ?x8.
    ?x1 <http://dbpedia.org/ontology/instrument> ?x9.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Agent>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>.
    ?x1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://www.w3.org/2002/07/owl#Thing> .
}
""" .


t:l1a
#  a qc:ContainmentTest ;
  qc:sourceQuery q:l1a ;
  qc:targetQuery q:l1b ;
  qc:result "{?v_2=?v_2, ?x7=?x7, ?x8=?x8, ?v_3=?v_3, ?v_4=?v_4, ?x5=?x5, ?v_5=?v_5, ?x6=?x6, ?v_6=?v_6, ?x3=?x3, ?v_7=?v_7, ?x4=?x4, ?x1=?x1, ?v_8=?v_8, ?v_9=?v_9, ?x2=?x2, ?v_1=?v_1, ?v_10=?v_10, ?v_15=?v_15, ?v_12=?v_12, ?v_11=?v_11, ?v_14=?v_14, ?x9=?x9, ?v_13=?v_13}" ;
  .

q:q2-a
  lsq:text "SELECT * { ?x a <http://foo> }" ;
  .

q:q2-b
  lsq:text "SELECT ?s { { Select Distinct ?s { ?s a <http://foo> } } }" ;
  .

q:q2-c
  lsq:text "SELECT * { { ?a a <http://foo> } UNION { ?b a <http://bar> } }" ;
  .

t:t2-1
#  a qc:ContainmentTest ;
  qc:sourceQuery q:q2-a ;
  qc:targetQuery q:q2-b ;
  qc:result "{?v_2=?v_2, ?s=?x, ?v_1=?v_1}" ;
  .

t:t2-2
  a qc:ContainmentTest ;
  qc:sourceQuery q:q2-a ;
  qc:targetQuery q:q2-c ;
  qc:result "{?v_2=?v_2, ?x=?a, ?v_1=?v_1}" ;
  .


t:t1
#  a qc:ContainmentTest ;
  qc:sourceQuery q:q1-b ;
  qc:targetQuery q:q1-a ;
  qc:result "{?v_2=?v_2, ?v_3=?v_3, ?c=?c, ?b=?b, ?v_1=?v_1, ?a=?a}" ;
  .


q:qx1-u
  lsq:text "SELECT * { { ?a ?a ?a } UNION { ?b ?b ?b } }"
  .

q:qx1-up
  lsq:text "SELECT ?a { { ?a ?a ?a } UNION { ?b ?b ?b } ?c ?c ?c }"
  .

q:qx0-a
  lsq:text "SELECT DISTINCT ?b { ?b ?b ?b } LIMIT 10"
  .

q:qx1-a
  lsq:text "SELECT DISTINCT ?a { { { ?a ?a ?a } UNION {   { SELECT DISTINCT ?b { ?b ?b ?b } }   } } ?c ?c ?c } LIMIT 10"
  .

q:qx1-x
  lsq:text "SELECT DISTINCT ?a { { { ?a ?a ?a } UNION { ?b ?b ?b } } ?c ?c ?c } LIMIT 10"
  .

t:tx1
#  a qc:ContainmentTest ;
  qc:sourceQuery q:qx1-a ;
  qc:targetQuery q:qx1-a ;
  qc:result "{?v_2=?v_2, ?v_3=?v_3, ?c=?c, ?b=?b, ?v_1=?v_1, ?a=?a}" ;
  .


q:qx1-c
  lsq:text "SELECT DISTINCT ?s { { { ?a ?a ?a } UNION {   { SELECT DISTINCT ?b { ?b ?b ?b } }   } } ?c ?c ?c } LIMIT 10"
  .

q:qx1-b
  lsq:text "SELECT * { ?a ?a ?a }"
  .

q:qx-3
  lsq:text "SELECT DISTINCT ?0 { { { ?0 ?0 ?0 } UNION {   { SELECT DISTINCT ?1 { ?1 ?1 ?1} }   } } ?2 ?2 ?2 } LIMIT 10"
  .

q:qx-4
  lsq:text "Select * { { SELECT DISTINCT ?s { { { ?0 ?0 ?0 } UNION { {   SELECT DISTINCT ?1 { ?1 ?1 ?1 } }   } } { { ?2 ?2 ?2 } UNION { ?3 ?3 ?3 } } { ?4 ?4 ?4 } } LIMIT 10 } { ?f ?c ?k } }"
  .

# works
t:t-0
#  a qc:ContainmentTest ;
  qc:sourceQuery q:q0-a ;
  qc:targetQuery q:q0-a ;
  qc:results "[{a: a}]"^^xsd:json ;
  .

#
t:t-1
#  a qc:ContainmentTest ;
  qc:sourceQuery q:q1-up ;
  qc:targetQuery q:q1-up ;
  qc:results "[{a: a}]"^^xsd:json ;
  .

#
t:t-2
#  a qc:ContainmentTest ;
  qc:sourceQuery q:q1-c ;
  qc:targetQuery q:q1-c ;
  qc:results "[{a: a}]"^^xsd:json ;
  .


t:t-3
#  a qc:ContainmentTest ;
  qc:sourceQuery q:q1-b ;
  qc:targetQuery q:q1-a ;
  qc:results "[{a: a}]"^^xsd:json ;
  .

